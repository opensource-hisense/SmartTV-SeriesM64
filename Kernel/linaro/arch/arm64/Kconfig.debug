menu "Kernel hacking"

config KCONFIG_DEBUG_PATH 
	string
	option env="KCONFIG_DEBUG_PATH"

source "$KCONFIG_DEBUG_PATH"

config FRAME_POINTER
	bool
	default y

config DEBUG_STACK_USAGE
	bool "Enable stack utilization instrumentation"
	depends on DEBUG_KERNEL
	help
	  Enables the display of the minimum amount of free stack which each
	  task has ever had available in the sysrq-T output.

config EARLY_PRINTK
	bool "Early printk support"
	default y
	help
	  Say Y here if you want to have an early console using the
	  earlyprintk=<name>[,<addr>][,<options>] kernel parameter. It
	  is assumed that the early console device has been initialised
	  by the boot loader prior to starting the Linux kernel.

config PID_IN_CONTEXTIDR
	bool "Write the current PID to the CONTEXTIDR register"
	help
	  Enabling this option causes the kernel to write the current PID to
	  the CONTEXTIDR register, at the expense of some additional
	  instructions during context switch. Say Y here only if you are
	  planning to use hardware trace tools with this kernel.

config SHOW_FAULT_TRACE_INFO
    bool "Show trace info on user page fault"
	   default y 
	   depends on MP_DEBUG_TOOL_CODEDUMP || MP_DEBUG_TOOL_KDEBUG	
    help
       Shows trace information when "Segmentation fault" or "Bus error" occurs.
       Prints registers, call stack, maps, user stack, etc.

config SHOW_PC_LR_INFO
     bool "Show address range including PC, LR"
     depends on SHOW_FAULT_TRACE_INFO
     default y

endmenu
