/*
 * Copyright:
 * ----------------------------------------------------------------------------
 * This confidential and proprietary software may be used only as authorized
 * by a licensing agreement from ARM Limited.
 * (C) COPYRIGHT 2012-2013 ARM Limited, ALL RIGHTS RESERVED
 * The entire notice above must be reproduced on all authorized copies and
 * copies may only be made to the extent permitted by a licensing agreement
 * from ARM Limited.
 * ----------------------------------------------------------------------------
 */

/** @file mali_trace_all
 *
 * Plugin configuration file which enables all software trace-points.
 *
 * See file @ref mali_trace_none for documentation.
 */
TRACEPOINT_DECL( CINSTR_FLOW_DRV_CFRAME_READBACK,                         "readback",                              "@tpii", "cframe_manager,rt_specifier,mrt_index" )
TRACEPOINT_DECL( CINSTR_FLOW_DRV_CFRAME_DISCARD,                          "discard",                               "@tpii", "cframe_manager,rt_specifier,mrt_index" )
TRACEPOINT_DECL( CINSTR_FLOW_DRV_CFRAME_FLUSH,                            "Flush",                                 "@tppiii", "_producerof_tilelist,cframe_manager,width,height,active_render_targets" )
TRACEPOINT_DECL( CINSTR_FLOW_DRV_CFRAME_ENQUEUE_JOBCHAIN,                 "jc_enq",                                "@tppII",  "_consumerof_tilelist,_producerof_payload,stage,flags" )
TRACEPOINT_DECL( CINSTR_SUSPEND_DRV_CFRAME_BLOCK_IF_TOO_MANY_FLUSHES,     "too_many_flushes",                      "@tpi",   "cframe_manager,num_events" )
TRACEPOINT_DECL( CINSTR_RESUME_DRV_CFRAME_BLOCK_IF_TOO_MANY_FLUSHES,      "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_FLOW_DRV_CMAR_ENQUEUE_COMMAND,                    "cmd_enq",                               "@tppp",  "_producerof_command,event,_consumerof_payload" )
TRACEPOINT_DECL( CINSTR_FLOW_DRV_CMAR_DEQUEUE_COMMAND,                    "cmd_deq",                               "@tpppi", "_consumerof_command,event,payload,_producerof_atom_number" )
TRACEPOINT_DECL( CINSTR_SUSPEND_DRV_EGL_WAIT_FRAME,                       "egl_wait_frame",                        "@t",     "" )
TRACEPOINT_DECL( CINSTR_RESUME_DRV_EGL_WAIT_FRAME,                        "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_SUSPEND_DRV_EGL_WINSYS_GET_BUFFER,                "egl_getbuf",                            "@t",     "" )
TRACEPOINT_DECL( CINSTR_RESUME_DRV_EGL_WINSYS_GET_BUFFER,                 "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_CLIENT_EGL_SWAPBUFFERS,                     "eglSwapBuffers",                        "@tIs",   "line,file" )
TRACEPOINT_DECL( CINSTR_LEAVE_CLIENT_EGL_SWAPBUFFERS,                     "",                                      "@tI",    "line" )
TRACEPOINT_DECL( CINSTR_FLOW_CLIENT_EGL_SWAPBUFFERS,                      "",                                      "@tI",    "line" )
TRACEPOINT_DECL( CINSTR_SUSPEND_DRV_EGL_WAIT_FOR_FENCE_ENQUEUE,           "egl_wait_fence_enq",                    "@t",     "" )
TRACEPOINT_DECL( CINSTR_RESUME_DRV_EGL_WAIT_FOR_FENCE_ENQUEUE,            "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_FLOW_DRV_GLES_FBP_OBJECT_NEW,                     "fbp_new",                               "@tIp",   "fboname,cframe_manager" )
TRACEPOINT_DECL( CINSTR_ENTER_CLIENT_GLES_DRAWELEMENTS,                   "glDrawElements",                        "@tIs",   "line,file" )
TRACEPOINT_DECL( CINSTR_LEAVE_CLIENT_GLES_DRAWELEMENTS,                   "",                                      "@tI",    "line" )

TRACEPOINT_DECL( CINSTR_ENTER_CLIENT_CL_ENQUEUE_NDRANGE_KERNEL,           "clEnqueueNDRangeKernel",                "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_CLIENT_CL_ENQUEUE_NDRANGE_KERNEL,           "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_CLIENT_CL_ENQUEUE_READ_BUFFER,              "clEnqueueReadBuffer",                   "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_CLIENT_CL_ENQUEUE_READ_BUFFER,              "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_CLIENT_CL_ENQUEUE_WRITE_BUFFER,             "clEnqueueWriteBuffer",                  "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_CLIENT_CL_ENQUEUE_WRITE_BUFFER,             "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_CLIENT_CL_ENQUEUE_MAP_BUFFER,               "clEnqueueMapBuffer",                    "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_CLIENT_CL_ENQUEUE_MAP_BUFFER,               "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_MCL_DISPATCH_EXECUTOR,                  "mcl_dispatch_executor",                 "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_MCL_DISPATCH_EXECUTOR,                  "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_MCL_DISPATCH_PROFILING,                 "mcl_dispatch_profiling",                "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_MCL_DISPATCH_PROFILING,                 "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_MCL_DISPATCH_TERMINATOR,                "mcl_dispatch_terminator",               "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_MCL_DISPATCH_TERMINATOR,                "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_MCL_MARSHAL_ENQUEUE,                    "mcl_marshal_enqueue",                   "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_MCL_MARSHAL_ENQUEUE,                    "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_MCL_PLUGIN_DEVICE_T6XX_CREATE_PAYLOAD,  "mcl_plugin_device_t6xx_create_payload", "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_MCL_PLUGIN_DEVICE_T6XX_CREATE_PAYLOAD,  "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_MCL_PLUGIN_MEMORY_T6XX_READ_BUFFER,     "mcl_plugin_memory_t6xx_read_buffer",    "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_MCL_PLUGIN_MEMORY_T6XX_READ_BUFFER,     "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_BUILD_SPLIT_JOB,                        "build_split_jobs",                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_BUILD_SPLIT_JOB,                        "",                                      "@t",     "" )

TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_BUILD_PROGRAM,                     "clcc__build_program",                   "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_BUILD_PROGRAM,                     "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_INIT_PROGRAM_SOURCE,               "clcc__init_program_source",             "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_INIT_PROGRAM_SOURCE,               "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_PARSE_BUILD_OPTIONS,               "clcc__parse_build_options",             "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_PARSE_BUILD_OPTIONS,               "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_FRONTEND,                          "clcc__frontend",                        "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_FRONTEND,                          "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_FRONTEND_INIT_BIFL,                "clcc__frontend__init_bifl",             "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_FRONTEND_INIT_BIFL,                "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_FRONTEND_INIT_HEADER,              "clcc__frontend__init_header",           "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_FRONTEND_INIT_HEADER,              "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_FRONTEND_PARSE_AST,                "clcc__frontend__parse_ast",             "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_FRONTEND_PARSE_AST,                "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_MIDDLE,                            "clcc__middle",                          "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_MIDDLE,                            "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_MIDDLE_OPTIMIZE,                   "clcc__middle__optimize",                "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_MIDDLE_OPTIMIZE,                   "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_MIDDLE_EXTRACT_METADATA,           "clcc__middle__extract_metadata",        "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_MIDDLE_EXTRACT_METADATA,           "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_MIDDLE_LINKER,                     "clcc__middle__linker",                  "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_MIDDLE_LINKER,                     "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_BUILD_KERNEL,                      "clcc__build_kernel",                    "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_BUILD_KERNEL,                      "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_BACKEND,                           "clcc__backend",                         "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_BACKEND,                           "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_BACKEND_CONVERTER,                 "clcc__backend__converter",              "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_BACKEND_CONVERTER,                 "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_BACKEND_CMPBE_BACKEND,             "clcc__backend__cmpbe_backend",          "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_BACKEND_CMPBE_BACKEND,             "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_CREATE_CONTAINER,                  "clcc__create_container",                "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_CREATE_CONTAINER,                  "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_BUILD_FROM_BINARY,                 "clcc__build_from_binary",               "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_BUILD_FROM_BINARY,                 "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CLCC_BUILD_FROM_ASM,                    "clcc__build_from_asm",                  "@t",     "" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CLCC_BUILD_FROM_ASM,                    "",                                      "@t",     "" )
TRACEPOINT_DECL( CINSTR_RESET_CLIENT_GLES_PRIMITIVES,                     "Primitives per frame",                  "@ti",    "increment" )

TRACEPOINT_DECL( CINSTR_SET_DRV_CMEM_INACTIVE_COUNT,     "CMEM Inactive Count",        "@tpi",    "instance,value" )
TRACEPOINT_DECL( CINSTR_ENTER_DRV_CMEM_PURGE_THREAD,     "CMEM purge thread",          "@tIs",    "line,file" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CMEM_PURGE_THREAD,     "",                           "@tIs",    "line,file" )
TRACEPOINT_DECL( CINSTR_SET_DRV_CMEM_HOARD_HUNK_TOTAL,   "Hoard total bytes",          "@tpl",    "instance,value" )
TRACEPOINT_DECL( CINSTR_SET_DRV_CMEM_HOARD_HUNK_PURGE,   "Hoard purgeable bytes",      "@tpl",    "instance,value" )
TRACEPOINT_DECL( CINSTR_SET_DRV_CMEM_HOARD_MAP_TOTAL,    "Hoard total mapped bytes",   "@tpl",    "instance,value" )
TRACEPOINT_DECL( CINSTR_SET_DRV_CMEM_HOARD_MAP_PURGE,    "Hoard purgeable map bytes",  "@tpl",    "instance,value" )

TRACEPOINT_DECL( CINSTR_ENTER_DRV_CMEM_HMEM_HEAP_ALLOC,  "cmem_hmem_heap_alloc",       "@tIs",    "line,file" )
TRACEPOINT_DECL( CINSTR_LEAVE_DRV_CMEM_HMEM_HEAP_ALLOC,  "",                           "@tI",     "line" )
TRACEPOINT_DECL( CINSTR_FLOW_DRV_CMEM_HMEM_HEAP_FREE,    "cmem_hmem_heap_free",        "@tI",     "line" )
TRACEPOINT_DECL( CINSTR_COUNT_DRV_CMEM_HMEM_HEAP_BYTES,  "HMEM heap bytes allocated",  "@tpi",    "instance,increment" )
TRACEPOINT_DECL( CINSTR_SET_DRV_CMEM_HMEM_HEAP_BYTES,    "HMEM heap bytes allocated",  "@tpI",    "instance,value" )
TRACEPOINT_DECL( CINSTR_USR_DRV_CMEM_HEAP_INIT,          "cmemp_heap_init",            "@tppII",  "cctx,instance,memtype,properties" )
TRACEPOINT_DECL( CINSTR_USR_DRV_CMEM_HEAP_ALLOC,         "cmemp_heap_alloc",           "@tppII",  "instance,allocation,size,alignment" )

/* This must be last to ensure that all previous declarations are included in a build
 */
TRACEPOINT_DECL( CINSTR_DO_NOT_TRACE, "The following tracepoints are compiled out.", "", "" )
